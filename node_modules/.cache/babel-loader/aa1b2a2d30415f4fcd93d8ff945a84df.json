{"ast":null,"code":"import { createStore, applyMiddleware, compose } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\nconst persistConfig = {\n  key: 'root',\n  storage,\n  whitelist: [] //? persisted data จดจำค่าใน store ไว้เวลา reload\n\n};\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nconst initialState = {};\nconst enhancers = [];\nconst middleware = [thunk];\n\nif (process.env.NODE_ENV === 'development') {\n  const devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n  if (typeof devToolsExtension === 'function') {\n    enhancers.push(devToolsExtension());\n  }\n}\n\nconst composedEnhancers = compose(applyMiddleware(...middleware), ...enhancers);\nexport default (() => {\n  let store = createStore(persistedReducer, initialState, composedEnhancers);\n  let persistor = persistStore(store);\n  return {\n    store,\n    persistor\n  };\n});","map":{"version":3,"sources":["/Users/osiris/Desktop/git/reactTypescript/src/store/index.tsx"],"names":["createStore","applyMiddleware","compose","persistStore","persistReducer","storage","thunk","rootReducer","persistConfig","key","whitelist","persistedReducer","initialState","enhancers","middleware","process","env","NODE_ENV","devToolsExtension","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","push","composedEnhancers","store","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,WAAP,MAAwB,YAAxB;AASA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,GAAG,EAAE,MADe;AAEpBJ,EAAAA,OAFoB;AAGpBK,EAAAA,SAAS,EAAE,EAHS,CAGL;;AAHK,CAAtB;AAMA,MAAMC,gBAAgB,GAAGP,cAAc,CAACI,aAAD,EAAgBD,WAAhB,CAAvC;AAEA,MAAMK,YAAgB,GAAG,EAAzB;AACA,MAAMC,SAAa,GAAG,EAAtB;AACA,MAAMC,UAAU,GAAG,CAACR,KAAD,CAAnB;;AAEA,IAAIS,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC1C,QAAMC,iBAAiB,GAAGC,MAAM,CAACC,oCAAP,IAA+ClB,OAAzE;;AAEA,MAAI,OAAOgB,iBAAP,KAA6B,UAAjC,EAA6C;AAC3CL,IAAAA,SAAS,CAACQ,IAAV,CAAeH,iBAAiB,EAAhC;AACD;AACF;;AAED,MAAMI,iBAAiB,GAAGpB,OAAO,CAACD,eAAe,CAAC,GAAGa,UAAJ,CAAhB,EAAiC,GAAGD,SAApC,CAAjC;AAEA,gBAAe,MAAM;AACnB,MAAIU,KAAK,GAAGvB,WAAW,CACrBW,gBADqB,EAErBC,YAFqB,EAGrBU,iBAHqB,CAAvB;AAKA,MAAIE,SAAS,GAAGrB,YAAY,CAACoB,KAAD,CAA5B;AACA,SAAO;AAAEA,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAP;AACD,CARD","sourcesContent":["import { createStore, applyMiddleware, compose } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers'\n\ndeclare global {\n    interface Window {\n      __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n    }\n  }\n  \n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  whitelist: [], //? persisted data จดจำค่าใน store ไว้เวลา reload\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst initialState:any = {};\nconst enhancers:any = [];\nconst middleware = [thunk];\n\nif (process.env.NODE_ENV === 'development') {\n  const devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n  if (typeof devToolsExtension === 'function') {\n    enhancers.push(devToolsExtension());\n  }\n}\n\nconst composedEnhancers = compose(applyMiddleware(...middleware), ...enhancers);\n\nexport default () => {\n  let store = createStore(\n    persistedReducer,\n    initialState,\n    composedEnhancers\n  );\n  let persistor = persistStore(store);\n  return { store, persistor };\n};"]},"metadata":{},"sourceType":"module"}